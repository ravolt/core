# Copyright 2014, Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source 'http://rubygems.org'

gem 'rails', '~> 4.0.10'
gem 'pg'
gem 'haml'
# Pinned until we fix our stypesheets for sass ~> 3.3.0
gem 'sass', '~> 3.2.0'
gem 'sass-rails', '~> 4.0.2'
gem 'simple-navigation'
gem 'syslogger'
# Give us real foriegn keys in idiomatic Rails,
# adds support for database-level constraints, support for views,
# etc.
gem 'schema_plus'
gem 'kwalify'
gem 'maruku'
gem 'puma'
#gem 'amqp'
gem 'xml-simple'
gem 'daemons'
gem 'active_scaffold'
gem 'devise', "~>3.0.0"
gem 'rails_config'
gem 'delayed_job'
gem 'delayed_job_active_record'
gem 'ledermann-rails-settings', :require => 'rails-settings'
gem 'jquery-rails'
gem 'net-ssh'
gem 'chef', ">= 11.16.4", '< 12.0'
gem 'open4'
gem 'structurematch', '~> 0.1.1'
gem 'diplomat'

group :development, :test do
  gem 'coveralls'
  gem "factory_girl"
  gem "factory_girl_rails"
  gem 'faker'
  gem 'rspec-rails'
  gem "email_spec"
  gem "database_cleaner"
  gem "launchy"
  gem "simplecov"
end


# to use digest auth in cli unit tests
gem 'net-http-digest_auth'

#Install gems from each barclamp.  The crowbar_path variable is
#needed by Gemfile.d/*.gemfile so that they can determine the correct
# path at run-time rather than having to hard-code a path at
# install-time which may be different and therefore incorrect.

Dir.glob("/opt/opencrowbar/**/crowbar_engine/barclamp_*/*.gemspec") do |gemfile|
  gemname = gemfile.split('/')[-2]
  gemdir = File.join(*gemfile.split('/')[1...-1])
  gemdef = "gem '#{gemname}', :path => '/#{gemdir}'"
  eval(gemdef, binding)
end
